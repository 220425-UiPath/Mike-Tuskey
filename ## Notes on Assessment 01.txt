## Notes on Assessment 01
---

## Git Basics 
- Git- A Version Control Sysytem that was created in 2005. Is basically terminal. It is a command line tool. 
- GitHub is a web service and hosts the git respositories to easily collaborate with others. Source Control is Github
- Respitory is blank folder to drop your project 
- Local VCS- Error Prone 
- Centralize VCS- If the server is down you cant operate
- Distrbuted VCS- Git, BitBucket. This systems allows you to take from origin, clone it and then work on it to then push it forward. 

----

## Git commands 
- Repository- workspace which tracks and manges files wihtin a folder. Every Git repo has its own history and not connected to other. 
- Git Status: It reports the status of the current repository. 
- git init: initializes a new repo whenever we are in the terminal and great directory called git. One repo per project 
- Commmitting- Most important git feature. It when you send your changes in your local machine and pushes it towards the GitHub
-Do a quick review of git committing and git commands

---

## Scripting Fundamentals
- Command Line- it is the coding program that is the place where one runs all git/shell commands. 
- Emulator- Allows the host system to emulate th equalities of a client system. A moblie application developer might run emulated device on their PC in order to test the application
- Shell- A computer program which a command line interpreter. A shell script includes operation to be performed like file manipulation, program execution and priting text 

--- 

### Shell Commands 
1. echo- to output a string, display a line of text that is passed in as an argument. This is a bash command that is mostly used in shell scripts to output status to the screen or to a file. The print command
2. cat- commands means 'concatenate' and is used to view, create and append files. cat then follow through with what you want. 
3. grep- it is used to search text and strings in a given file 
4. mkdir- creates a new directory or folder
5. touch- creates a file
6. which- Which is a shell command that prints out the full path of an executable that is listed in the environment variable PATH. 
7. find- Find is a shell command to recursively search through a specified directory based on given parameters. Find is used to locate files that fit certain parameters without needing to manually search through a directory tree.
8. pwd- shows you are and prints the  work directory
9. NANO- A shell command that allows you to access the files through git that can open and edit files directly in the system

--- 

### RPA 
# What is RPA?
- RPA stands for **R**obotic **P**rocess **A**utomation.
- It is a business process automation technology using bots to perform repetitive, high-volume tasks that are rule-based and trigger-driven.
    - The purpose of this technology is to accomplish several goals:
        - Reduce time spent on simple and repetitive tasks to streamline workflow, increase productivity, and reduce overhead.
        - Prevent errors caused by human involvment, reducing time spent making corrections and improving compliance.
        - Allow workforce to focus on more complex and meaningful tasks.

![Common RPA Uses](https://d1jnx9ba8s6j9r.cloudfront.net/blog/wp-content/uploads/2018/06/Asset-8.png)
## The RPA Life Cycle
![RPA Life Cycle](https://www.blueprintsys.com/hs-fs/hubfs/RPA-Lifecycle-Management-Blueprint.png?width=500&name=RPA-Lifecycle-Management-Blueprint.png)
1. **RPA Candidate Identification**  
The first stage involves identifying business processes and tasks that are good candidates for automation.
2. **Assessment & Prioritization**  
This stage requires stakeholders to assess the processes and tasks from the previous stage based on technical feasibility and business value/ROI (Return On Investment). Candidates that pass this stage are then ordered by priority and passed to the next stage.
3. **Design**  
This stage is where solutions for automating candidate processes and tasks are defined and modeled. Any additional dependencies such as the RPA platform are also identified at this stage. A blueprint for the solution is created at the end of this stage to be presented to the development team.
4. **Development**  
In this stage, a development team builds the bot based on the blueprint from the design stage. The development is performed in the studio environment provided by the chosen RPA platform.
5. **Testing**  
At this stage, the development team or a separate QA/QC (quality assurance/quality control) team tests the bot in a test or sandbox environment to ensure it works as intended and to identify any possible edge cases missed throughout the previous two stages.
6. **Deployment**  
When the team(s) involved in the testing stage are satisfied that the solution is robust and stable enough, it is deployed into production.
7. **Monitoring & Change Management**  
As with all software development, the last stage involves monitoring the solution for errors and to ensure it meets any defined performance targets as well as maintaining the bot to ensure any external changes from any dependencies does not affect the bot's ability to perform its tasks.
## RPA Offerings
![RPA Contenders](https://i.imgur.com/LhPmKbz.png)
## Top RPA Vendors

1. **UiPath** 
-Offers a platform that gives anyone in an organization the ability to build and use robots. Developers with more experience can use a rich development environment with Studio, while citizen developers can automate simple, day-to-day tasks for themselves and their team with StudioX. UiPath also enables users to test any of their processes with the platform’s Test Suite. Additionally, the vendor offers a range of ways for staff to engage with bots through Action Center, UiPath Assistant, and Chatbots. Users can also create and manage governance policies with Automation Ops.

2. **Blue Prisim**
-Offers a diverse product portfolio, including intelligent automation, robotic operating models, Blue Prism Cloud, automation lifecycle management, and a process assessment tool, among other devices. Blue Prism’s intelligent automation platform is available for on-prem, public cloud, hybrid, and multi-cloud environments, as well as SaaS deployments.

3. **Automated Anywhere**
- Offers cloud-native and web-based automation platform that combines RPA, artificial intelligence, machine learning, and analytics. The provider also offers its Bot Store, the first and largest marketplace with more than 1,200 pre-built, intelligent automation solutions. Automation 360 automates business processes across all systems and applications, including SaaS and legacy applications. 


4. **NICE**
- Offers process mining is included with the solution, NEVA. NEVA works side-by-side with employees from any location, guiding them through complex processes. This technology leverages Desktop Analytics and machine learning to accurately pinpoint which business processes should be automated.  NICE RPA also increases throughput capacity, enabling businesses to achieve ROI targets faster


--- 

### Visual Programming (Scratch)

- Scratch is a high-level block-based visual programming language and website aimed primarily at children as an educational tool for programming, with a target audience of ages 8 to 16.[6] Users on the site, called Scratchers, can create projects on the website using a block-like interface. Scratch allows one with limited coding skills to build programs 

### Variables, operators, conditionals, Iteration?

- Variables- Each variable must belong to a data type. The data type determines th eamount of memmory spaced allocated to the varible. We can convert a variable from one data type to another. Intitializing variables means assigning values to varibales. Holds the data date of the program 
- Operators-  An operator in VB.Net refers to a symbol that instrcuts the complier to perform a specific logical or ma
- Variables- a key word which you assign it for data of sometype, the word is just a key that is a place holder for storing the data. 
- Variable: a reference which holds a value which can be changed: Speed, mileage, age, score etc
- Constant: a value that will not change. Think pi
- Operators- they are the operations which can be performed between operands. Allow for basic expersions to be used. Here are operators
    - Logical - And, is false, is ture, or 
    - Comparison- comparing operants , =, <>, >
    - Arthetnic- math operators so think ^, +, -, /, \,*
    - Moducle- it is the reminder of a given value so if 16/3 the reminder will be the modcule. It is used to determine if a number is odd or even. 
- Conditional- To check for a given value and make decision. Ex, if, if else, if-else, if-else-else
Modu
- Iterations- Iteration method is looping. It repeats a group of statements a specified number of times and a loop index counts the number of loop iterations to. Loops is about code but iteration is the process for being generated into a loop. Iteration is new and loop is an older use 
----

### VB.NET- is a object oriented langauge 
- VB.NET was developed by Microsoft and is a object-oriented language. The language is not case sensitivie and VB.NET programs run on .NET. 
- The language provides windows forms from which you can inheirt your own forms. Allows you to drag and drop feature when creating user interface. 
- .NET is a platform for creating new application and support mutiple languges like C sharp 
- Dim is short for Dimension which is key word for declaring varibale names and datatypes
- Char- short for character that is used to represnt a word 
- String- is an array of character 
- Array is a collection of data such as a bunch of string together 
- Constructs- used to creat the instant of the object .the place where variables are listed. An example would be buidlign the mathematics in the calculaotr The language syntax, basic building blocks to build programs- sequence 
- Namespace- is where we name the file and is where the basket is to apples 
- Namespace declaration
We include a namespace into our programming structure. After that, we will be able to access all the methods that have been defined in that namespace without getting an error.
- 
- The Main procedure
This marks the entry point in all VB.Net programs.
It defines what the module will do when it is executed.
---


### OOP - Object Oriented Program- Object, classes, collection
- A coding program that relies on class and objects as the buidling blocks to its code. You design around the data of the object 
- Class is a blueprint or template for creating objects in programs. Car would be c
- Objects- It is anything which has real-life entity. An example would be a cat. Object has its state (attributes) and behaviors. Example is a cat has fur and cat an movement. State (data/attricutes) are nouns and behaviros are verbs. 
- Pillars of OOP 4 stages (add notes)
    - Encapulation- Wrapping up data and data hiding
    - Abstraction- Show only essentials features of the program 
    - Inheritance- It for resuability and creating parent-child relationship between objects of classes- 
    - Polymorphism- mutiple Characterists based on object- a man can be a husband, father and employee 
- Collections- Class used to represent a simlar is simply an objectg 

---

### Functional (methods, sub-routine, arugments) work on 
- A prodcedure is a group of statments that together perform a task when called. When executed control reutnra to the statement 
- VB.NET has two types of procedures
- Functional- a statement that is used to declare the name, parameter and the body of the function. Function return a value. It is a functional think of the lotto number we put in or the return we get
- Subs do not return a value both are functional, performs a specifc routie for the user 
- A fuction is procduedre that allows you to push the code and return a value 
- Methods- In object-oriented programming, a method is a programmed procedure that is defined as part of a class and included in any object of that class. A class (and thus an object) can have more than one method.
- A method is a procedure created as a member of a class and they cause an object to do something. Methods are used to access or manipulate the characteristics of an object or a variable. It createa  key word that will activates a series of code. so the .. os the key 
- Arugments-Arguments are independent items, or variables, that contain data or codes. the value that is passed between programs when you call in  a producre and (A+B) in the addition methond the a and b would be the arguemtns 
- Git is the program 
CLone push pull are the argurments 
 and your arugment is the input in the parathesis that is in your method. If you put in addition that the arugemnts are the additons. 
- A way for you to provide more inforation to the funciton that can then run it throught the variable fancy word for inouts that cna be moved into our vairbles ot provide a stronger outcome 
- 

---

## Vb.Net Syntax (datatypes, experssion, constructs, iteration) 
- 

### Notes
- Operator allows you to manuipulate the program, 1 and 2 are the operants and the + is the operatined 

- Array- Storing mutiple object in an array or a collections of object sotred in the code. Allows you then to create a single varibale 
- Two crietera 
- 21.	WHAT IS A METHOD - a separate code block that will contain a series of statements to perform particular operations, useful to improve the code reusability by reducing code duplication.

- Methods- are processing machines are like a bank. When you withdraw from your bank you expect something in return like money. When you deposit nothing in your account you dont expect money back. 
- Withdraw method whill have integers for the money being- do you want you method to process something and return it to you
- Deposit method will have no return type so have paramaters

Main procedure- defines what the moducle will do when it is excuted and is the main point of VB.Net

Moducle-  defines a reference type available throughout its namespace. A module (sometimes called a standard module) is similar to a class but with some important distinctions. Every module has exactly one instance and does not need to be created or assigned to a variable.

### QC 